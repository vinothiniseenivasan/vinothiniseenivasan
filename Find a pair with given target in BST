Find a pair with given target in BST


class Solution
{
    //Function to find the nodes that are common in both BST.
	public static ArrayList<Integer> findCommon(Node root1,Node root2)
    {
        //code here
          ArrayList<Integer> list = new ArrayList<>();
        if(root1 == null || root2 == null)
        {
            return list;
        }
      
          Stack<Node> s1 = new Stack<>();
          Node n = root1;
          while(n != null)
          {
              s1.push(n);
              n = n.left;
          }
           Stack<Node> s2 = new Stack<>();
            n = root2;
          while(n != null)
          {
              s2.push(n);
              n = n.left;
          }
          while(!s1.isEmpty() && !s2.isEmpty())
          {
              if(s1.peek().data < s2.peek().data)
              {
                  moveLeft(s1);
              }
              else if(s1.peek().data > s2.peek().data)
              {
                  moveLeft(s2);
              }
              else
              {
                  list.add(s1.peek().data);
                   moveLeft(s1);
                   moveLeft(s2);
              }
          }
          return list;
        
    
    }
      public static void  moveLeft( Stack<Node> s)
    {
        Node temp = s.peek();
        s.pop();
        temp = temp.right;
        while(temp != null)
        {
            s.push(temp);
            temp =temp.left;
        }
      
    }
}


  
